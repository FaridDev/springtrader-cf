allprojects {
    group = 'org.springframework.nanotrader'
    description = 'springtrader-cf'
    version = '2.0'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    ext {
        springVersion = '4.2.6.RELEASE'
        springSecurityVersion = '4.1.0.RELEASE'
        springCloudVersion = '1.1.1.RELEASE'
        amqpVersion = '4.2.5.RELEASE'
        servletApiVersion = "3.0.1"
        mockitoVersion = '1.10.19'
        junitVersion = '4.12'
        hamcrestVersion = '1.3'
        springNetflixVersion = '1.0.6.RELEASE'
        log4jVersion = '2.6'
        feignGsonVersion = '8.5.0'
        gsonVersion = '2.3.1'
        jsonPathVersion = '2.2.0'
        jacksonVersion = '2.6.4'
        jstlVersion = '1.2'
    }

    dependencies {
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
        testCompile "org.springframework:spring-test:${springVersion}"
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    }
}


project('spring-nanotrader-service-support') {
    description = 'Spring Nanotrader Data Service Support'

    dependencies {
        testCompile project(':spring-nanotrader-data').sourceSets.test.output
        compile project(":spring-nanotrader-data")
    }
}

project('spring-nanotrader-data') {
    description = 'Spring Nanotrader Data'

    dependencies {

        compile("org.springframework.cloud:spring-cloud-starter-eureka:${springNetflixVersion}") {
            exclude module: 'spring-cloud-starter'
            exclude module: 'spring-boot-starter-web'
            exclude module: 'spring-cloud-starter-ribbon'
        }

        compile("org.springframework.cloud:spring-cloud-starter-hystrix:${springNetflixVersion}") {
            exclude module: 'spring-cloud-starter'
        }

        compile("org.springframework.cloud:spring-cloud-starter-feign:${springNetflixVersion}") {
            exclude module: 'spring-cloud-starter'
        }

        compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
        compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"

        compile "com.netflix.feign:feign-gson:${feignGsonVersion}"
        compile "com.google.code.gson:gson:${gsonVersion}"
        compile "com.jayway.jsonpath:json-path:${jsonPathVersion}"
        compile "com.fasterxml.jackson.core:jackson-annotations:2.5.2"
    }
}

project('spring-nanotrader-services') {
    apply plugin: 'war'
    description = 'Spring Nanotrader Services'

    dependencies {
        testCompile project(':spring-nanotrader-data').sourceSets.test.output
        compile project(":spring-nanotrader-service-support")

        compile "org.springframework:spring-webmvc:${springVersion}"
        providedCompile("javax.servlet:javax.servlet-api:${servletApiVersion}")
        compile "org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudVersion}"
        compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudVersion}"
        compile "org.springframework.integration:spring-integration-amqp:${amqpVersion}"
        compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
        compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
        compile "org.springframework:spring-aspects:${springVersion}"
    }
}

project('spring-nanotrader-web') {
    apply plugin: 'war'
    description = 'Spring Nanotrader Web'

    dependencies {
        compile "org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudVersion}"
        compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudVersion}"
        compile "org.springframework:spring-webmvc:${springVersion}"

        compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "javax.servlet:jstl:${jstlVersion}"
    }
}

project('spring-nanotrader-asynch-services') {
    apply plugin: 'war'
    description = 'Spring Nanotrader Asynch Services'

    dependencies {
        testCompile project(':spring-nanotrader-data').sourceSets.test.output
        compile project(":spring-nanotrader-service-support")
        compile "org.springframework.integration:spring-integration-amqp:${amqpVersion}"
        compile "org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudVersion}"
        compile "org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}